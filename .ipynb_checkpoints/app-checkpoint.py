{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "224d321b",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2025-06-12 17:22:44.081 WARNING streamlit.runtime.scriptrunner_utils.script_run_context: Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-06-12 17:22:44.081 WARNING streamlit.runtime.scriptrunner_utils.script_run_context: Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-06-12 17:22:44.971 \n",
      "  \u001b[33m\u001b[1mWarning:\u001b[0m to view this Streamlit app on a browser, run it with the following\n",
      "  command:\n",
      "\n",
      "    streamlit run C:\\Users\\lenovo slim 3\\anaconda3\\Lib\\site-packages\\ipykernel_launcher.py [ARGUMENTS]\n",
      "2025-06-12 17:22:44.971 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-06-12 17:22:44.971 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-06-12 17:22:44.971 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-06-12 17:22:44.971 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-06-12 17:22:44.971 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-06-12 17:22:46.175 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-06-12 17:22:46.176 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-06-12 17:22:46.176 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-06-12 17:22:46.176 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2025-06-12 17:22:46.176 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n"
     ]
    }
   ],
   "source": [
    "import streamlit as st\n",
    "import pandas as pd\n",
    "import joblib\n",
    "from sklearn.metrics import accuracy_score, classification_report\n",
    "\n",
    "# Page title\n",
    "st.set_page_config(page_title=\"Vehicle Health Predictor\", layout=\"centered\")\n",
    "st.title(\"üöó Vehicle Health Prediction App\")\n",
    "\n",
    "# Description\n",
    "st.write(\"Upload a CSV file containing engine data to get health predictions.\")\n",
    "\n",
    "# Load the model\n",
    "try:\n",
    "    model = joblib.load('vehicle_health_model.pkl')\n",
    "except FileNotFoundError:\n",
    "    st.error(\"‚ùå Model file not found. Make sure 'vehicle_health_model.pkl' is in the app folder.\")\n",
    "    st.stop()\n",
    "\n",
    "# Upload CSV\n",
    "uploaded_file = st.file_uploader(\"üìÇ Upload engine_data.csv\", type=[\"csv\"])\n",
    "\n",
    "if uploaded_file:\n",
    "    try:\n",
    "        df = pd.read_csv(uploaded_file)\n",
    "        st.subheader(\"üìÑ Uploaded Data (Top 5 rows)\")\n",
    "        st.write(df.head())\n",
    "\n",
    "        # Predict button\n",
    "        if st.button(\"üöÄ Predict\"):\n",
    "            try:\n",
    "                has_actual = 'Engine Condition' in df.columns\n",
    "\n",
    "                if has_actual:\n",
    "                    X = df.drop(columns=['Engine Condition'])\n",
    "                    y_true = df['Engine Condition']\n",
    "                else:\n",
    "                    X = df\n",
    "\n",
    "                # Make predictions\n",
    "                predictions = model.predict(X)\n",
    "                df['Predicted Condition'] = predictions\n",
    "\n",
    "                # Show predictions\n",
    "                st.subheader(\"üîç Prediction Results\")\n",
    "                st.write(df)\n",
    "\n",
    "                # Offer download\n",
    "                csv = df.to_csv(index=False).encode('utf-8')\n",
    "                st.download_button(\"‚¨áÔ∏è Download Results as CSV\", csv, \"predictions.csv\", \"text/csv\")\n",
    "\n",
    "                # Show accuracy if labels exist\n",
    "                if has_actual:\n",
    "                    acc = accuracy_score(y_true, predictions)\n",
    "                    report = classification_report(y_true, predictions)\n",
    "                    st.subheader(f\"üìä Accuracy: {acc * 100:.2f}%\")\n",
    "                    st.text(\"Classification Report:\")\n",
    "                    st.text(report)\n",
    "\n",
    "            except Exception as e:\n",
    "                st.error(f\"‚ö†Ô∏è Prediction error: {e}\")\n",
    "\n",
    "    except Exception as e:\n",
    "        st.error(f\"‚ö†Ô∏è Could not read the file: {e}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "404dc33d",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
